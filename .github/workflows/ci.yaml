name: 'CI'

on:
  pull_request:
  push:
    branches:
    - main

jobs:
  build-audit-test:
    name: Build & Test all packages on ${{ matrix.os }}, Node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        node: ['16.18.0']
    steps:
      - name: 🛎️ Check out repo
        uses: actions/checkout@v3

      - name: ⚙️ Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      # It is important to install java before installing clojure tools
      # https://github.com/actions/setup-java
      - name: Set up java
        uses: actions/setup-java@v3
        with:
          # https://github.com/marketplace/actions/setup-java-jdk#eclipse-temurin
          distribution: 'temurin'
          java-version: '17'

      - name: Check Java version
        run: java --version

      # https://github.com/DeLaGuardo/setup-clojure
      # Install one or more tools. Specific a particular version or use 'latest'
      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@9.5
        with:
          cli: 'latest'
          bb: 0.10.163
          clj-kondo: 'latest'
          cljstyle: 'latest'
          zprint: 'latest'

      - run: bb describe

      - name: ⚙️ Install dependencies
        run: npm ci

      - name: 📦 Compile release build
        run: bb app:release

      # https://shadow-cljs.github.io/docs/UsersGuide.html#build-report
      # - name: 📝 Generate build report
      #   run: npx shadow-cljs run shadow.cljs.build-report app target/build-report.html

      - name: 🔍 Test app
        run: npx shadow-cljs compile karma-test

      - name: 🔍 Run the Karma test runner
        run: bb test:karma

       # https://developers.cloudflare.com/pages/how-to/use-direct-upload-with-continuous-integration/#use-github-actions
       # https://github.com/cloudflare/pages-action
      - name: 🎉 Publish to Cloudflare Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: re-frame-tic-tac-toe
          directory: resources/public
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
